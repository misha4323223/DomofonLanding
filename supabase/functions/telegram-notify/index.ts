import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const TELEGRAM_BOT_TOKEN = Deno.env.get('TELEGRAM_BOT_TOKEN')!
const TELEGRAM_CHAT_ID = Deno.env.get('TELEGRAM_CHAT_ID')!

interface RequestData {
  type: 'INSERT'
  table: string
  record: {
    id: string
    created_at: string
    name: string
    phone: string
    city: string
    address: string
    apartment: string | null
    message: string | null
    onesignal_id: string | null
  }
}

serve(async (req) => {
  try {
    const payload: RequestData = await req.json()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞
    if (payload.type !== 'INSERT' || payload.table !== 'requests') {
      return new Response('OK', { status: 200 })
    }

    const { record } = payload
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `
üîî <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!</b>

üë§ <b>–ò–º—è:</b> ${record.name}
üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${record.phone}
üèô <b>–ì–æ—Ä–æ–¥:</b> ${record.city}
üìç <b>–ê–¥—Ä–µ—Å:</b> ${record.address}${record.apartment ? `\nüè† <b>–ö–≤–∞—Ä—Ç–∏—Ä–∞:</b> ${record.apartment}` : ''}${record.message ? `\n\nüí¨ <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b>\n${record.message}` : ''}

üïê <b>–í—Ä–µ–º—è:</b> ${new Date(record.created_at).toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}
üÜî <b>ID:</b> ${record.id}
    `.trim()

    // –§–æ—Ä–º–∏—Ä—É–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å onesignal_id)
    const keyboard = record.onesignal_id ? {
      inline_keyboard: [
        [
          {
            text: 'üîµ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ',
            callback_data: `notify:${record.id}:processing`
          },
          {
            text: 'üöó –ú–∞—Å—Ç–µ—Ä –≤—ã–µ—Ö–∞–ª',
            callback_data: `notify:${record.id}:departed`
          },
          {
            text: '‚úÖ –†–µ—à–µ–Ω–∞',
            callback_data: `notify:${record.id}:solved`
          }
        ]
      ]
    } : undefined

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`
    
    const response = await fetch(telegramUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: message,
        parse_mode: 'HTML',
        reply_markup: keyboard,
      }),
    })

    if (!response.ok) {
      const error = await response.text()
      console.error('Telegram API error:', error)
      throw new Error(`Telegram API error: ${error}`)
    }

    return new Response(
      JSON.stringify({ success: true }),
      { status: 200, headers: { 'Content-Type': 'application/json' } }
    )
  } catch (error) {
    console.error('Error:', error)
    return new Response(
      JSON.stringify({ error: error.message }),
      { status: 500, headers: { 'Content-Type': 'application/json' } }
    )
  }
})
