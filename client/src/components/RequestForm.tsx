import { useState } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { requestFormSchema, type RequestFormData } from "@shared/schema";
import { Loader2, CheckCircle2, FileText, Bell } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { oneSignalService } from "@/lib/onesignal";
import { supabaseAPI } from "@/lib/supabase";

export function RequestForm() {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [showNotificationPrompt, setShowNotificationPrompt] = useState(false);
  const [isSubscribing, setIsSubscribing] = useState(false);
  const [submittedData, setSubmittedData] = useState<RequestFormData | null>(null);
  const [savedRequestId, setSavedRequestId] = useState<string | null>(null);
  const { toast } = useToast();

  const form = useForm<RequestFormData>({
    resolver: zodResolver(requestFormSchema),
    defaultValues: {
      name: "",
      phone: "",
      city: "",
      address: "",
      apartment: "",
      message: "",
    },
  });

  const onSubmit = async (data: RequestFormData) => {
    setIsSubmitting(true);
    try {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ Supabase:', data);
      const savedRequest = await supabaseAPI.createRequest(data);
      console.log('‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Supabase:', savedRequest);

      if (savedRequest && savedRequest.id) {
        setSavedRequestId(savedRequest.id.toString());
      }

      console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');

      setSubmittedData(data);
      setIsSubmitted(true);
      setShowNotificationPrompt(true);
      console.log('üëâ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–º–ø—Ç –ø–æ–¥–ø–∏—Å–∫–∏');

      form.reset();

      toast({
        title: "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!",
        description: "–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.",
      });
    } catch (error) {
      console.error("Error submitting form:", error);
      toast({
        variant: "destructive",
        title: "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleEnableNotifications = async () => {
    setIsSubscribing(true);
    try {
      console.log('üîî –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ OneSignal
      if (typeof window.OneSignalDeferred === 'undefined') {
        throw new Error('OneSignal SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –±—Ä–∞—É–∑–µ—Ä–æ–º.');
      }

      await oneSignalService.requestPermission();

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–µ–≥–∏ OneSignal
      if (!submittedData) {
        throw new Error('–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      }

      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–µ–≥–∏:', submittedData);

      if (submittedData.phone) {
        await oneSignalService.addTag('phone', submittedData.phone);
      }
      if (submittedData.name) {
        await oneSignalService.addTag('name', submittedData.name);
      }
      if (submittedData.city) {
        await oneSignalService.addTag('city', submittedData.city);
      }
      if (submittedData.address) {
        await oneSignalService.addTag('address', submittedData.address);
      }

      console.log('‚úÖ –¢–µ–≥–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');

      // –ü–æ–ª—É—á–∞–µ–º OneSignal subscription ID –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≤ Supabase
      console.log('üîç –ü–æ–ª—É—á–∞–µ–º OneSignal Subscription ID...');
      const subscriptionId = await oneSignalService.getSubscriptionId();
      
      if (subscriptionId) {
        console.log('‚úÖ OneSignal ID –ø–æ–ª—É—á–µ–Ω:', subscriptionId);
        
        if (savedRequestId) {
          console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º OneSignal ID –≤ Supabase –¥–ª—è –∑–∞—è–≤–∫–∏:', savedRequestId);
          await supabaseAPI.updateRequestOneSignalId(savedRequestId, subscriptionId);
          console.log('‚úÖ OneSignal ID —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase!');
        } else {
          console.warn('‚ö†Ô∏è Request ID –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ –º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å OneSignal ID');
        }
      } else {
        console.warn('‚ö†Ô∏è OneSignal ID –Ω–µ –ø–æ–ª—É—á–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
      }

      toast({
        title: "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã!",
        description: "–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–∫–∏",
      });
      setShowNotificationPrompt(false);
    } catch (error: any) {
      console.error('‚ùå Failed to enable notifications:', error);

      let errorTitle = "–û—à–∏–±–∫–∞";
      let errorMessage = "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";

      if (error?.message?.includes('–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω') || error?.message?.includes('blocked') || error?.message?.includes('–Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω')) {
        errorTitle = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã";
        errorMessage = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫–ª—é—á–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫ —Ä–µ–∫–ª–∞–º—ã –∏–ª–∏ –∑–∞—â–∏—Ç—É –æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞";
      }

      toast({
        variant: "destructive",
        title: errorTitle,
        description: errorMessage,
        duration: 6000,
      });
    } finally {
      setIsSubscribing(false);
    }
  };

  if (isSubmitted) {
    return (
      <section className="py-20 bg-background" id="request-form">
        <div className="max-w-4xl mx-auto px-6">
          <Card>
            <CardContent className="p-12 text-center">
              <CheckCircle2 className="w-16 h-16 text-green-500 mx-auto mb-4" data-testid="icon-success" />
              <h2 className="text-2xl font-bold mb-2" data-testid="text-success-title">
                –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!
              </h2>
              <p className="text-muted-foreground mb-6" data-testid="text-success-message">
                –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
              </p>

              {showNotificationPrompt && (
                <Card className="mb-6 border-primary/20 bg-primary/5">
                  <CardContent className="p-6">
                    <div className="flex items-center justify-center gap-3 mb-4">
                      <Bell className="w-6 h-6 text-primary" />
                      <h3 className="text-lg font-semibold">–ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
                    </div>
                    <p className="text-sm text-muted-foreground mb-4">
                      –ú—ã —Å–æ–æ–±—â–∏–º –≤–∞–º –∫–æ–≥–¥–∞ –º–∞—Å—Ç–µ—Ä –≤—ã–µ–¥–µ—Ç –∫ –≤–∞–º –∏ –∫–æ–≥–¥–∞ —Ä–∞–±–æ—Ç–∞ –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞
                    </p>
                    <div className="flex gap-3 justify-center">
                      <Button
                        onClick={handleEnableNotifications}
                        disabled={isSubscribing}
                        data-testid="button-enable-notifications"
                      >
                        {isSubscribing ? (
                          <>
                            <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                            –í–∫–ª—é—á–µ–Ω–∏–µ...
                          </>
                        ) : (
                          <>
                            <Bell className="mr-2 h-4 w-4" />
                            –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                          </>
                        )}
                      </Button>
                      <Button
                        variant="ghost"
                        onClick={() => setShowNotificationPrompt(false)}
                        data-testid="button-skip-notifications"
                      >
                        –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              )}

              <Button
                onClick={() => {
                  setIsSubmitted(false);
                  setShowNotificationPrompt(false);
                  setSavedRequestId(null);
                }}
                data-testid="button-submit-another"
              >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω—É –∑–∞—è–≤–∫—É
              </Button>
            </CardContent>
          </Card>
        </div>
      </section>
    );
  }

  return (
    <section className="py-20 bg-background" id="request-form">
      <div className="max-w-4xl mx-auto px-6">
        <div className="text-center mb-12">
          <h2 className="text-4xl font-bold mb-4" data-testid="text-form-title">
            –ó–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto" data-testid="text-form-subtitle">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.
          </p>
        </div>

        <Card>
          <CardContent className="p-6">
            <div className="bg-muted/30 p-4 rounded-md mb-6 flex items-center justify-center gap-2">
              <FileText className="w-4 h-4 text-muted-foreground" />
              <p className="text-sm text-muted-foreground text-center">
                –£–∫–∞–∂–∏—Ç–µ: –≥–æ—Ä–æ–¥, –∞–¥—Ä–µ—Å, –Ω–æ–º–µ—Ä –¥–æ–º–∞, –∫–≤–∞—Ä—Ç–∏—Ä—É –∏ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω
              </p>
            </div>

            <Form {...form}>
              <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <FormField
                    control={form.control}
                    name="name"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>–ò–º—è *</FormLabel>
                        <FormControl>
                          <Input
                            placeholder="–í–∞—à–µ –∏–º—è"
                            {...field}
                            data-testid="input-name"
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="phone"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>–¢–µ–ª–µ—Ñ–æ–Ω *</FormLabel>
                        <FormControl>
                          <Input
                            placeholder="+7 (___) ___-__-__"
                            {...field}
                            data-testid="input-phone"
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <FormField
                    control={form.control}
                    name="city"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>–ì–æ—Ä–æ–¥ *</FormLabel>
                        <FormControl>
                          <Input
                            placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞"
                            {...field}
                            data-testid="input-city"
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />

                  <FormField
                    control={form.control}
                    name="apartment"
                    render={({ field }) => (
                      <FormItem>
                        <FormLabel>–ö–≤–∞—Ä—Ç–∏—Ä–∞</FormLabel>
                        <FormControl>
                          <Input
                            placeholder="–ù–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã"
                            {...field}
                            data-testid="input-apartment"
                          />
                        </FormControl>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                </div>

                <FormField
                  control={form.control}
                  name="address"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>–ê–¥—Ä–µ—Å *</FormLabel>
                      <FormControl>
                        <Input
                          placeholder="–£–ª–∏—Ü–∞, –¥–æ–º"
                          {...field}
                          data-testid="input-address"
                        />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />

                <FormField
                  control={form.control}
                  name="message"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</FormLabel>
                      <FormControl>
                        <Textarea
                          placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é..."
                          className="resize-none min-h-[120px]"
                          {...field}
                          data-testid="input-message"
                        />
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />

                <Button
                  type="submit"
                  size="lg"
                  className="w-full"
                  disabled={isSubmitting}
                  data-testid="button-submit-form"
                >
                  {isSubmitting ? (
                    <>
                      <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                      –û—Ç–ø—Ä–∞–≤–∫–∞...
                    </>
                  ) : (
                    "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
                  )}
                </Button>
              </form>
            </Form>
          </CardContent>
        </Card>

        <div className="mt-8 text-center">
          <p className="text-sm text-muted-foreground" data-testid="text-contact-info">
            –ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é:{" "}
            <span className="font-medium text-foreground">
              8-905-629-87-08 / 8-919-073-61-42
            </span>
          </p>
        </div>
      </div>
    </section>
  );
}